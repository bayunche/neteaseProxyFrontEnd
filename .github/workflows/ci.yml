name: Continuous Integration

on:
  push:
    branches: [ main, master, develop ]
  pull_request:
    branches: [ main, master, develop ]

env:
  NODE_VERSION: '18'

jobs:
  quality-checks:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          
      - name: Install dependencies
        run: npm ci
        
      - name: Build shared package
        run: npm run build --workspace=packages/shared
        
      - name: Lint all packages
        run: |
          npm run lint --workspace=packages/shared
          npm run lint --workspace=packages/web
          npm run lint --workspace=packages/mobile
          
      - name: Type check all packages
        run: |
          npm run type-check --workspace=packages/shared
          npm run type-check --workspace=packages/web
          npm run type-check --workspace=packages/mobile
          
      - name: Run tests
        run: |
          npm run test --workspace=packages/shared
          npm run test --workspace=packages/web
          npm run test --workspace=packages/mobile
          
      - name: Check build compatibility
        run: |
          npm run build --workspace=packages/web
          npm run build --workspace=packages/mobile --if-present
          
  security-audit:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          
      - name: Security audit
        run: npm audit --audit-level=moderate
        
      - name: Check for outdated dependencies
        run: npm outdated || true
        
  performance-tests:
    runs-on: ubuntu-latest
    needs: quality-checks
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          
      - name: Install dependencies
        run: npm ci
        
      - name: Build packages
        run: |
          npm run build --workspace=packages/shared
          npm run build --workspace=packages/web
          
      - name: Run bundle size analysis
        run: npm run analyze --workspace=packages/web --if-present
        
      - name: Upload bundle analysis
        uses: actions/upload-artifact@v3
        if: always()
        with:
          name: bundle-analysis
          path: packages/web/dist/stats.html
          
  dependency-update:
    runs-on: ubuntu-latest
    if: github.event_name == 'schedule'
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          
      - name: Update dependencies
        run: |
          npx npm-check-updates -u
          npm install
          
      - name: Create Pull Request
        uses: peter-evans/create-pull-request@v5
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          commit-message: 'chore: update dependencies'
          title: 'chore: update dependencies'
          body: 'Automated dependency update'
          branch: chore/update-dependencies