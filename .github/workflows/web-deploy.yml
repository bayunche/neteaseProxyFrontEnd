name: Web CI/CD

on:
  push:
    branches: [main, master, develop]
    paths:
      - 'packages/web/**'
      - 'packages/shared/**'
      - '.github/workflows/web-deploy.yml'
  pull_request:
    branches: [main, master, develop]
    paths:
      - 'packages/web/**'
      - 'packages/shared/**'

env:
  NODE_VERSION: '18'

jobs:
  quality-checks:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          
      - name: Install dependencies
        run: npm ci
        
      - name: Build shared package
        run: npm run build --workspace=packages/shared
        
      - name: Lint Web packages
        run: |
          npm run lint --workspace=packages/shared --if-present
          npm run lint --workspace=packages/web
          
      - name: Type check Web packages
        run: |
          npm run type-check --workspace=packages/shared --if-present
          npm run type-check --workspace=packages/web --if-present
          
      - name: Run Web tests
        run: |
          npm run test --workspace=packages/shared --if-present
          npm run test --workspace=packages/web --if-present
          
      - name: Build Web application
        run: npm run build --workspace=packages/web
        
      - name: Lighthouse CI
        uses: treosh/lighthouse-ci-action@v10
        with:
          configPath: './packages/web/lighthouse.config.js'
          uploadArtifacts: true
          temporaryPublicStorage: true
        continue-on-error: true
          
  security-audit:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          
      - name: Security audit
        run: npm audit --audit-level=moderate
        
      - name: OWASP ZAP Baseline Scan
        if: github.event_name == 'pull_request'
        uses: zaproxy/action-baseline@v0.10.0
        with:
          target: 'http://localhost:3000'
        continue-on-error: true
        
  deploy-vercel:
    runs-on: ubuntu-latest
    needs: [quality-checks, security-audit]
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          
      - name: Install dependencies
        run: npm ci
        
      - name: Build shared package
        run: npm run build --workspace=packages/shared
        
      - name: Build Web application
        run: npm run build --workspace=packages/web
        
      - name: Deploy to Vercel
        uses: amondnet/vercel-action@v25
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          vercel-args: '--prod'
          vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
          vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
          working-directory: ./packages/web
          
  deploy-netlify:
    runs-on: ubuntu-latest
    needs: [quality-checks, security-audit]
    if: github.ref == 'refs/heads/develop'
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          
      - name: Install dependencies
        run: npm ci
        
      - name: Build shared package
        run: npm run build --workspace=packages/shared
        
      - name: Build Web application
        run: npm run build --workspace=packages/web
        
      - name: Deploy to Netlify
        uses: nwtgck/actions-netlify@v3.0
        with:
          publish-dir: './packages/web/dist'
          production-branch: develop
          github-token: ${{ secrets.GITHUB_TOKEN }}
          deploy-message: 'Deploy from GitHub Actions'
          enable-pull-request-comment: true
          enable-commit-comment: true
        env:
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
          NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}
          
  performance-monitoring:
    runs-on: ubuntu-latest
    needs: [deploy-vercel]
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
    
    steps:
      - name: Wait for deployment
        run: sleep 60
        
      - name: Performance check with Lighthouse
        uses: foo-software/lighthouse-check-action@master
        with:
          urls: 'https://music-player-vercel-url.vercel.app'
          outputDirectory: /tmp/artifacts
          verbose: true
        continue-on-error: true
        
      - name: Upload Lighthouse results
        uses: actions/upload-artifact@v3
        with:
          name: lighthouse-results
          path: /tmp/artifacts