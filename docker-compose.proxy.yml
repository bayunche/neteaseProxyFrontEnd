version: '3.8'

services:
  proxy:
    build:
      context: .
      dockerfile: Dockerfile.proxy
    container_name: netease-proxy
    restart: unless-stopped
    ports:
      - "3001:3001"
    environment:
      - NODE_ENV=production
      - PORT=3001
      - ALLOWED_ORIGINS=https://yourdomain.com,https://www.yourdomain.com
    volumes:
      - ./logs:/app/logs
    networks:
      - proxy-network
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.proxy.rule=Host(`proxy.yourdomain.com`)"
      - "traefik.http.routers.proxy.tls=true"
      - "traefik.http.routers.proxy.tls.certresolver=letsencrypt"
      - "traefik.http.services.proxy.loadbalancer.server.port=3001"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3001/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # 可选：Redis缓存（用于大规模部署）
  redis:
    image: redis:7-alpine
    container_name: netease-proxy-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes
    networks:
      - proxy-network

  # 可选：Nginx反向代理
  nginx:
    image: nginx:alpine
    container_name: netease-proxy-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - proxy
    networks:
      - proxy-network

networks:
  proxy-network:
    driver: bridge

volumes:
  redis_data: